using System;
using System.IO;
using System.Threading;

namespace FileOperations
{
    class Program
    {
        static void Main(string[] args)
        {
            string fileName = "log.txt";

            while (true)
            {
                Console.WriteLine("\nВыберите действие:");
                Console.WriteLine("1. Создать файл и записать данные");
                Console.WriteLine("2. Прочитать данные из файла");
                Console.WriteLine("3. Записать данные параллельно через потоки");
                Console.WriteLine("4. Удалить файл");
                Console.WriteLine("5. Выход");
                Console.Write("Введите номер команды: ");

                int choice = int.Parse(Console.ReadLine());

                switch (choice)
                {
                    case 1:
                        CreateAndWriteToFile(fileName);
                        break;
                    case 2:
                        ReadFromFile(fileName);
                        break;
                    case 3:
                        WriteToFileParallel(fileName);
                        break;
                    case 4:
                        DeleteFile(fileName);
                        break;
                    case 5:
                        return;
                    default:
                        Console.WriteLine("Неверный выбор.");
                        break;
                }
            }
        }

        static void CreateAndWriteToFile(string fileName)
        {
            try
            {
                using (StreamWriter sw = new StreamWriter(fileName))
                {
                    for (int i = 0; i < 10; i++)
                    {
                        sw.WriteLine($"Поток {i + 1}: {DateTime.Now}");
                    }
                }
                Console.WriteLine("Файл создан и данные записаны.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при создании или записи в файл: {ex.Message}");
            }
        }

        static void ReadFromFile(string fileName)
        {
            try
            {
                using (StreamReader sr = new StreamReader(fileName))
                {
                    Console.WriteLine("Содержимое файла:");
                    string line;
                    while ((line = sr.ReadLine()) != null)
                    {
                        Console.WriteLine(line);
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при чтении файла: {ex.Message}");
            }
        }

        static void WriteToFileParallel(string fileName)
        {
            try
            {
                Thread thread1 = new Thread(() =>
                {
                    using (StreamWriter sw = new StreamWriter(fileName, true))
                    {
                        for (int i = 0; i < 5; i++)
                        {
                            sw.WriteLine($"Поток 1: Запись выполнена в {DateTime.Now}");
                            Thread.Sleep(100);
                        }
                    }
                });

                Thread thread2 = new Thread(() =>
                {
                    using (StreamWriter sw = new StreamWriter(fileName, true))
                    {
                        for (int i = 0; i < 5; i++)
                        {
                            sw.WriteLine($"Поток 2: Запись выполнена в {DateTime.Now}");
                            Thread.Sleep(100);
                        }
                    }
                });

                thread1.Start();
                thread2.Start();
                thread1.Join();
                thread2.Join();
                Console.WriteLine("Данные записаны параллельно.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при параллельной записи: {ex.Message}");
            }
        }

        static void DeleteFile(string fileName)
        {
            try
            {
                File.Delete(fileName);
                Console.WriteLine("Файл удален.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при удалении файла: {ex.Message}");
            }
        }
    }
}
